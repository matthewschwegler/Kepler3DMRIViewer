<startup>
    <mkdir>cache</mkdir>
    <mkdir>cache/cachedata</mkdir>
    <mkdir>cache/objects</mkdir>
    <mkdir>cache/RawData</mkdir>
    <!--  changing this line to move to hsql 1.8.0.10: -->
    <!-- <tabletestsql>select TABLE_NAME from SYSTEM_TABLES where TABLE_NAME = ucase(?)</tabletestsql> -->
    <tabletestsql>select TABLE_NAME from INFORMATION_SCHEMA.SYSTEM_TABLES where TABLE_NAME = ucase(?)</tabletestsql>
    <!-- 
    	This table is used for EML stuff
     -->
    <createtable>create cached table KEPLERTEXTTABLES ( TABLENAME varchar, URL varchar )</createtable>

	<!-- 
		The CACHECONTENTTABLE maintains a list of all of the objects that have been Java Serialized
		in the cache directory.
		NAME - This is the name of the object
		LSID - Life Science ID
		DATE - Current system time in miliseconds whenever the row is inserted or updated
		FILE - The File where the java serialization can be found in the cache
		TYPE - The java binary class name of the object (e.g. ptolemy.actor.lib.gui.Display)
	-->
	<createtable>create cached table CACHECONTENTTABLE ( NAME varchar, LSID varchar, DATE varchar, FILE varchar, TYPE varchar, PRIMARY KEY (LSID) )</createtable>
	<!--
		The KAR_LOCAL_REPOS table is used to store the paths of the local repositories.
		PATH - the absolute path of the local directory that is the root directory of this local repository
		NAME - a user specified name to be used as a short name for the local repository
	-->
	<createtable>create cached table KAR_LOCAL_REPOS ( NAME varchar, PATH varchar, PRIMARY KEY (NAME), CONSTRAINT uk_repopath UNIQUE (PATH) )</createtable>
	<!--
		The KARS_CACHED table is used to keep track of what KARS have been cached in Kepler and where they are on disk.
		LSID - This is the lsid of the kar file
		NAME - This is the name of the kar file (e.g. Display.kar)
		VERSION - The KAR Manifest version of this KAR file.
		REPONAME - This is the name of the local repository that the kar file came from (e.g. actors)
		KARPATH - This is the path to the subdirectory from the local repository where this KAR is located.
	-->
	<createtable>create cached table KARS_CACHED ( LSID varchar, NAME varchar, VERSION varchar, REPONAME varchar, KARPATH varchar, PRIMARY KEY (LSID), FOREIGN KEY (REPONAME) REFERENCES KAR_LOCAL_REPOS (NAME) ON DELETE CASCADE ON UPDATE CASCADE )</createtable>
	<!-- 
		The KAR_ERRORS table is used to keep track of KARS that have errors.
		LSID - This is the lsid of the kar file
		NAME - This is the name of the kar file (e.g. Display.kar)
		VERSION - The KAR Manifest version of this KAR file.
		REPONAME - This is the name of the local repository that the kar file came from (e.g. actors)
		KARPATH - This is the path to the subdirectory from the local repository where this KAR is located.
		DEPENDENCIES - The Module dependencies string for this KAR file.
	-->
	<createtable>create cached table KAR_ERRORS ( LSID varchar, NAME varchar, VERSION varchar, REPONAME varchar, KARPATH varchar, DEPENDENCIES varchar, PRIMARY KEY (LSID), FOREIGN KEY (REPONAME) REFERENCES KAR_LOCAL_REPOS (NAME) ON DELETE CASCADE ON UPDATE CASCADE )</createtable>
	<!-- 
		The KAR_CONTENTS table is a linking table that tells us which cache object came from which KAR file.
		KARLSID - the LSID from the CACHEDKARS table
		LSID - the LSID of the KAREntry
		NAME - the name of the KAREntry in the KARFile (e.g. /resources/file.xml)
		TYPE - the type of the KAREntry
	--> 
	<createtable>create cached table KAR_CONTENTS ( KARLSID varchar, LSID varchar, NAME varchar, TYPE varchar, PRIMARY KEY (KARLSID,LSID), FOREIGN KEY (KARLSID) REFERENCES KARS_CACHED (LSID) ON DELETE CASCADE, FOREIGN KEY (LSID) REFERENCES CACHECONTENTTABLE (LSID) ON DELETE CASCADE  )</createtable>
	<!-- 
		The CACHE_SEARCH table is used to keep searchable text strings that are associated with KeplerLSIDs of cached content.
		SID - Search ID, an auto generated ID to be used as the primary key
		TYPE - an integer that specifies what type of string this is
				types include actor name, actor classname, ontology classes, etc.
				the types are specified in the class org.kepler.objectmanager.cache.CacheSearch
		SEARCHSTRING - a string that is used during searches of cached content
	 -->
	 <createtable>create cached table CACHE_SEARCH ( SID integer generated by default as identity, TYPE integer not null, LSID varchar not null, SEARCHSTRING varchar not null, PRIMARY KEY (SID), FOREIGN KEY (LSID) REFERENCES CACHECONTENTTABLE (LSID) ON DELETE CASCADE, CONSTRAINT uk_lsidsearchstring UNIQUE (LSID,SEARCHSTRING)  )</createtable>
</startup>
