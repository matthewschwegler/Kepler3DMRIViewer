/**
 *    '$RCSfile$'
 *
 *     '$Author: welker $'
 *       '$Date: 2010-05-05 22:21:26 -0700 (Wed, 05 May 2010) $'
 *   '$Revision: 24234 $'
 *
 *  For Details: http://kepler.ecoinformatics.org
 *
 * Copyright (c) 2004 The Regents of the University of California.
 * All rights reserved.
 *
 * Permission is hereby granted, without written agreement and without
 * license or royalty fees, to use, copy, modify, and distribute this
 * software and its documentation for any purpose, provided that the
 * above copyright notice and the following two paragraphs appear in
 * all copies of this software.
 *
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 * FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
 * IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY
 * OF SUCH DAMAGE.
 *
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 * PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY
 * OF CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 */

package org.kepler.dataproxy.metadata.ADN;

import java.io.IOException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Vector;

import org.ecoinformatics.ecogrid.QueryType;
import org.ecoinformatics.ecogrid.ResultsetType;
import org.ecoinformatics.ecogrid.ResultsetType_record;
import org.ecoinformatics.ecogrid.ResultsetType_record_returnField;
import org.ecoinformatics.ecogrid.ResultsetType_resultsetMetadata;
import org.ecoinformatics.ecogrid.ResultsetType_resultsetMetadata_recordStructure;
import org.ecoinformatics.ecogrid.ResultsetType_resultsetMetadata_recordStructure_returnField;
import org.ecoinformatics.seek.datasource.eml.eml2.Eml200DataSource;
import org.ecoinformatics.seek.ecogrid.MetadataSpecificationInterface;
import org.ecoinformatics.seek.ecogrid.ResultRecord;
import org.ecoinformatics.seek.ecogrid.SearchQueryGenerator;
import org.ecoinformatics.seek.ecogrid.SortableResultRecord;
import org.ecoinformatics.seek.ecogrid.SortableResultRecordComparator;
import org.ecoinformatics.seek.ecogrid.exception.EcoGridException;
import org.ecoinformatics.seek.ecogrid.exception.InvalidEcogridQueryException;
import org.ecoinformatics.util.Config;
import org.ecoinformatics.util.DebugPrinter;
import org.ecoinformatics.util.Util;
import org.kepler.dataproxy.datasource.geon.DataSource;
import org.kepler.dataproxy.datasource.geon.GEONDatabaseResource;
import org.kepler.dataproxy.datasource.geon.GEONShpResource;
import org.xml.sax.SAXException;

import ptolemy.actor.TypedAtomicActor;
import ptolemy.actor.gui.style.TextStyle;
import ptolemy.kernel.CompositeEntity;
import ptolemy.kernel.util.IllegalActionException;
import ptolemy.kernel.util.NameDuplicationException;
import ptolemy.kernel.util.StringAttribute;

/**
 *     This class is a plugin for adn namespace to transfer
 *     query group to ecogrid query type. It also provide a method to create
 *     quick search query
 *
 * @author Efrat Jaeger-Frank
 */

public class GEONDBSchemaParser
{
  private DebugPrinter debugger = DebugPrinter.getInstance();
  
  private static final String TABLEENTITY         = "//databaseMetaData/schema/table";

  	
  
  /**
   * Default constructor
   */
  public GEONDBSchemaParser()
  {
  }

  /**
   * Set up the config
   * @param conf ConfigXML
   */
  /*public void setConfigure(ConfigXML conf)
  {
    this.config = conf;
  }//setConfigure*/

 

     
}
