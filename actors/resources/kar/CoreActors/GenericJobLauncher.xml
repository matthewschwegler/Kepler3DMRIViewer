<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN" "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="GenericJobLauncher" class="ptolemy.kernel.ComponentEntity">
    <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org:actor:554:1">
    </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>null</configure>
    </property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Frankie Kwok, Chandrika Sivaramakrishnan, Jared Chase</configure>
    </property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>$Id: GenericJobLauncher.xml 30999 2012-10-31 22:15:59Z jianwu $</configure>
    </property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>
<p>GenericJobLauncher actor is a generic actor that can create, submit and manage a job on a remote machine accessible through SSH. The user may choose to wait till the job has attained a specific status in the queue - for example till it is Running, Complete, Not in Queue etc.</p>

<p>This actor is based on the JobCreator, JobManager, JobSubmitter and JobStatus actors. It abstracts all the actions of these actors, and the control flow required to combine these in a job launching workflow.</p>

<p>Five more parameters are configurable in 'expert' mode. They are "job submit options" (optional parameters to pass to submitting a job), "binary path" (the full path to the jobmanager commands on the target machine), "executable file" (executable file's name parameter and port), "use given workdir" (use the value of parameter 'workdir' and doesn't create unique sub directory if selected), "Use default fork script" (flag to set if you want the actor to stage the default fork script). To enable Expert mode, double-click the actor and choose 'Preferences' button. In the popup dialogue, choose 'expert mode'.</p>
</configure>
    </property>
<property name="port:cmdFile" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The submit file to be used at job submission. Absolute (or relative to current dir of Java) file path should be provided. The job file must be provided here, or the contents can be specified in cmdText.</configure>
    </property>
<property name="port:logPort" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Logging information of job status or for any error messages.</configure>
    </property>
<property name="port:scheduler" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The name of the job scheduler to be used. Should be a name, for which a supporter class exists as org.kepler.job.JobSupport{scheduler}.class</configure>
    </property>
<property name="port:target" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The machine to be used at job submission. Target in user@host:port format. If user is not provided, the local username will be used. If port is not provided, the default port 22 will be applied. If target is "local" or empty, all commands will be executed locally.</configure>
    </property>
<property name="port:dependentJob" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>One or more jobs that must successfully complete before this job can run.</configure>
    </property>
<property name="port:cmdText" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The text of the job specification. The job specification must either  be provided in this parameter or the file name in cmdFile.</configure>
    </property>
<property name="port:inputfiles" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The string array of local input files that will be copied to the working directory. Absolute path names, or relative to current dir of the running java virtual machine, should be provided.</configure>
    </property>
<property name="port:jobOut" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Logging information of job status query. Useful to inform user about problems at unsuccessful status query but it also prints out job status and jobid on successful query. This token can be used (delaying it with a Sleep actor) to ask its Status again and again until the job is finished or aborted. This port is an output port of type Object.</configure>
    </property>
<property name="port:success" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>boolean flag to indicate if job launch was successful</configure>
    </property>
<property name="port:workdir" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The working directory in which the actual job submission command will be executed. It should be an absolute path, or a relative one. In the latter case on remote machine, the directory path will be relative to the user's home directory (coming from the use of ssh). &lt;/p&gt; By default, a new unique sub directory is created within this workdir based on the job id created by kepler. Job is run from this sub directory. This can be overwritten by setting the parameter "use given workdir".</configure>
    </property>
<property name="port:remotefiles" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The string array of remote input files that will be copied to the working directory. Absolute path names, or relative to the user home dir on the remote host should be provided.</configure>
    </property>
<property name="prop:use given workdir" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>By default, Kepler creates a unique sub directory within workdir based on the the job id it creates for the job. Job is run from this sub directory. Set this flag to true if you want job to be run directly from workdir instead of a subdir.</configure>
    </property>
<property name="prop:job submit options" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure/>
    </property>
<property name="prop:Wait Until Status" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Wait until the job has a reached specific status. The available status' that can be reached are: any, wait, running, not in queue, and error.</configure>
    </property>
<property name="prop:numTasks" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The number of tasks for the job - used in a task parallel job</configure>
    </property>
<property name="prop:executable file" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The executable file to be used at job submission. Absolute path names, or relative to current dir of the running java virtual machine, should be provided. If it is "" then it is considered to be already at the remote site, otherwise the actor will look for it locally and stage it to the &lt;i&gt;workdir&lt;/i&gt; before job submission.</configure>
    </property>
<property name="prop:target" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The machine to be used at job submission. It should be null, "" or "local" for the local machine or [user@]host to denote a remote machine accessible with ssh.</configure>
    </property>
<property name="prop:cmdFileLocal" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Specifying whether the cmdFile is locally stored or on the remote target.</configure>
    </property>
<property name="prop:cmdText" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The text of the job specification. The job specification must either  be provided in this parameter or the file name in cmdFile.</configure>
    </property>
<property name="prop:inputfiles" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The string array of inputfiles. Absolute path names, or relative to current dir of the running java virtual machine, should be provided.</configure>
    </property>
<property name="prop:Use default fork script" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Boolean flag to indicate if the default fork script should be staged. If bin path is provided the default script is uploaded to bin path, else it is uploaded to the working directory</configure>
    </property>
<property name="prop:Wait Until Sleep (seconds)" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Amount of time (in seconds) to sleep between checking job status.</configure>
    </property>
<property name="prop:binary path" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The path to the job manager commands on the target machines. Commands are constructed as &lt;i&gt;binPath/command&lt;/i&gt; and they should be executable this way.</configure>
    </property>
<property name="prop:scheduler" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The name of the job scheduler to be used. It currently support multiple job schedulers: Condor, PBS, SGE, Fork, NCCS, LoadLeveler, LSF, and can be extended for more. It should be a name, for which a supporter class exists as org.kepler.job.JobSupport{scheduler}.class.</configure>
    </property>
<property name="prop:cmdFile" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The submit file to be used at job submission. Absolute (or relative to current dir of Java) file path should be provided. The job file must be provided here, or the contents can be specified in cmdText.</configure>
    </property>
<property name="prop:workdir" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure> The working directory in which the actual job submission command will be executed. It should be an absolute path, or a relative one. In the latter case on remote machine, the directory path will be relative to the user's home directory (coming from the use of ssh). &lt;/p&gt; By default, a new unique sub directory is created within this workdir based on the job id created by kepler. Job is run from this sub directory. This can be overwritten by setting the parameter "use given workdir"</configure>
    </property>
<property name="prop:remotefiles" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The string array of remote input files. Absolute path names, or relative to the user home dir on the remote host should be provided.</configure>
    </property>
</property>    <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.kepler.actor.job.GenericJobLauncher">
        <property name="id" class="ptolemy.kernel.util.StringAttribute" value="urn:lsid:kepler-project.org:class:554:1">
        </property>
    </property>
    <property name="target" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="cmdFile" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="workdir" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="inputfiles" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="ArrayToken:string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="remotefiles" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="ArrayToken:string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="scheduler" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
        <property name="_showName" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </property>
    <property name="jobOut" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="output">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="Object">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
    </property>
    <property name="logPort" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="output">
        </property>
        <property name="dataType" class="ptolemy.kernel.util.StringAttribute" value="string">
        </property>
        <property name="isMultiport" class="ptolemy.kernel.util.StringAttribute" value="false">
        </property>
    </property>
    <property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:1:1#ExternalExecutionEnvironmentActor">
    </property>
    <property name="semanticType11" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#JobCommand">
    </property>
</entity>
