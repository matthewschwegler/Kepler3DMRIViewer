<?xml version="1.0"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="ViterbiDecoder" class="ptolemy.kernel.ComponentEntity">
<property name="entityId"  value="urn:lsid:kepler-project.org:actor:659:1" class="org.kepler.moml.NamedObjId"/>
<property name="class" value="ptolemy.actor.lib.comm.ViterbiDecoder" class="ptolemy.kernel.util.StringAttribute">
  <property name="id" value="null" class="ptolemy.kernel.util.StringAttribute"/>
</property>

<property name="uncodedRate" class="ptolemy.data.expr.Parameter" value="1">
</property>

<property name="polynomialArray" class="ptolemy.data.expr.Parameter" value="{05, 07}">
</property>

<property name="delay" class="ptolemy.data.expr.Parameter" value="10">
</property>

<property name="softDecoding" class="ptolemy.data.expr.Parameter" value="false">
</property>

<property name="trellisDecoding" class="ptolemy.data.expr.Parameter" value="false">
</property>

<property name="constellation" class="ptolemy.data.expr.Parameter" value="{-1.0, 1.0}">
</property>

<property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#Communications">
</property>

<property name="kepler:input" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="boolean" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="inputType" class="ptolemy.actor.TypeAttribute" value="boolean">
</property>
</property>
<property name="kepler:output" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="output" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="boolean" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
</property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Ye Zhou, contributor: Edward A. Lee</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>$Id: ViterbiDecoder.java 57040 2010-01-27 20:52:32Z cxh $</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>&#10;The Viterbi algorithm is an optimal way to decode convolutional and&#10; trellis codes. The code is specified jointly by the &lt;i&gt;uncodedRate&lt;/i&gt;&#10; and &lt;i&gt;polynomialArray&lt;/i&gt; parameters.  To get a &lt;i&gt;k&lt;/i&gt;/&lt;i&gt;n&lt;/i&gt;&#10; code, set &lt;i&gt;uncodedRate&lt;/i&gt; to &lt;i&gt;k&lt;/i&gt; and give &lt;i&gt;n&lt;/i&gt; integers&#10; in &lt;i&gt;polynomialArray&lt;/i&gt;.  See ConvolutionalCoder for details about&#10; the meaning of these parameters. On each firing, this actor will&#10; read &lt;i&gt;n&lt;/i&gt; inputs and produce &lt;i&gt;k&lt;/i&gt; outputs.&#10; &lt;p&gt;&#10; The decoder finds the most likely data sequence given noisy inputs&#10; by searching all possibilities and computing the distance&#10; between the codewords they produce and the observed noisy data.&#10; The sequence yielding the minimum distance is the decoded output.&#10; &lt;p&gt;&#10; There are two choices offered in this actor to compute the distance.&#10; If it the parameter &lt;i&gt;softDecoding&lt;/i&gt; is set to be false, the input&#10; port will accept boolean tokens and compute the Hamming distance.&#10; If the parameter &lt;i&gt;softDecoding&lt;/i&gt; is set to be true, the input port&#10; will accept double tokens and compute the Euclidean distance.&#10; The parameter &lt;i&gt;constellation&lt;/i&gt; should be a double array of length 2.&#10; The first element specifies the amplitude of &quot;false&quot; input. The second&#10; element specifies the amplitude of &quot;true&quot; input.  At this time,&#10; this actor can only handle binary antipodal constellations, but&#10; we expect to generalize this.&#10; &lt;p&gt;&#10; Soft decoding has lower probability of decoding error than hard decoding.&#10; But distance computation for hard decoding is easier, since it is based&#10; on bit operations. Moreover, hard decoding can be used when there is no&#10; direct observation of the noisy data, but only observations of a bit&#10; sequence that may have errors in it.  With hard decoding, this&#10; actor serves the role of correcting errors.  With soft decoding, it&#10; serves the role of reducing the likelyhood of errors.&#10; &lt;p&gt;&#10; There is some delay between the reading of input data and the&#10; production of decoded output data.  That delay, which is called&#10; the &lt;i&gt;trace-back depth&lt;/i&gt; or &lt;i&gt;truncation depth&lt;/i&gt; of the&#10; decoder, is controlled by the&#10; &lt;i&gt;delay&lt;/i&gt; parameter, which is required to be a positive integer.&#10; On the first &lt;i&gt;delay&lt;/i&gt; firings of this actor, the outputs will&#10; be &lt;i&gt;false&lt;/i&gt;.  On each firing, the number of outputs produced&#10; is &lt;i&gt;uncodedRate&lt;/i&gt;, so the output will have a prefix of&#10; &lt;i&gt;delay&lt;/i&gt;*&lt;i&gt;uncodedRate&lt;/i&gt; false-valued tokens before any&#10; decoded bits are produced.  Larger values of &lt;i&gt;delay&lt;/i&gt; generally&#10; reduce the probability of error.  A good rule of thumb is to set&#10; &lt;i&gt;delay&lt;/i&gt; to five times the highest order of all polynomials, provided&#10; that the convolutional code is a one that has good distance properties.&#10; &lt;p&gt;&#10; For more information on convolutional codes and Viterbi decoder,&#10; see the ConvolutionalCoder actor and&#10; Proakis, &lt;i&gt;Digital Communications&lt;/i&gt;, Fourth Edition, McGraw-Hill,&#10; 2001, pp. 471-477 and pp. 482-485,&#10; or Barry, Lee and Messerschmitt, &lt;i&gt;Digital Communication&lt;/i&gt;, Third Edition,&#10; Kluwer, 2004.&#10; &lt;p&gt;</configure></property>
<property name="port:output" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The output port. By default, the type of this output is constrained  to be at least that of the input.</configure></property>
<property name="port:input" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The input port.  This base class imposes no type constraints except  that the type of the input cannot be greater than the type of the  output.</configure></property>
<property name="prop:uncodedRate" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Integer defining the number of bits produced at the output  in each firing. It should be a positive integer. Its  default value is 1.</configure></property>
<property name="prop:trellisDecoding" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Boolean defining whether the decoder will do trellis decoding.  If it is true, the input data and constellation type will be  complex; otherwise, they follow the constraints set by  &lt;i&gt;softDecoding&lt;/i&gt;. This parameter is always set to &quot;false&quot;  in ViterbiDecoder. It will always be set to &quot;true&quot; in  TrellisDecoder subclass.</configure></property>
<property name="prop:delay" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Integer defining the trace back depth of the viterbi decoder.  It should be a positive integer. Its default value is the  integer 10.</configure></property>
<property name="prop:softDecoding" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Boolean defining the decoding mode. If it is true, the decoder  will do soft decoding, and the input data type will be double;  otherwise it will do hard decoding, and the input data type will  be boolean. The default value is false.</configure></property>
<property name="prop:constellation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The constellation for soft decoding.  Inputs are expected to be  symbols from this constellation with added noise.  This parameter should be a double array of length 2. The first  element defines the amplitude of &quot;false&quot; input. The second element  defines the amplitude of &quot;true&quot; input.</configure></property>
<property name="prop:polynomialArray" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>An array of integers defining polynomials with  binary coefficients. The coefficients indicate the presence (1)  or absence (0) of a tap in the shift register. Each element  of this array parameter should be a positive integer.  The default value is {05, 07}.</configure></property>
</property></entity>
