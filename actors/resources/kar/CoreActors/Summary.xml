<?xml version="1.0"?>
<entity name="Summary" class="ptolemy.kernel.ComponentEntity">
<property name="entityId"  value="urn:lsid:kepler-project.org:actor:493:1" class="org.kepler.moml.NamedObjId"/>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">

<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Josh Madin</configure></property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>null</configure></property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute"><configure><p>The Summary  actor uses R to calculate a specified summary statistic. The actor
accepts a number of factors and a variable, and outputs the specified summary statistic (e.g., presence, mean, standard deviation, variance, etc).  </p>

<p>The R application must be installed on the local system to use this actor. R is a language and environment for statistical computing and graphics. For more information about R, see http://www.r-project.org/.</p>

<p>Input factors are input as an array of values, and might include "date", "site," or "replicate" data. The output summary table is arranged according to the order of the input factors. </p>

<p>In addition to factors, a variable (usually a continuous variable such as "height" or "rain fall") must be specified via the variable port.</p>

<p>By default, the actor performs a "presence/absence" analysis. To specify another type of analysis, specify a R-function (e.g., mean, sum, max, min, sd, prod, etc.) with a Constant actor and connect it to the method input port.</p>

<p>The actor performs the analysis and saves a "summary.txt" text file to the Kepler working directory.  On Unix-based machines, this file will be opened automatically during workflow execution.</p>

<p> Presently the output of the actor is a dummy output, and to access the summary table the next R actor must load the R workspace using 'load(".RData")' as the first line of the its R script. </p>

</configure></property>
<property name="port:Variable" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The variable to be summarized. </configure></property>
<property name="port:Factor5" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Any factor of interest  (e.g., 'date' or 'site' data)</configure></property>
<property name="port:graphicsFileName" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>An output port that broadcasts the file name of the generated graph of the results.</configure></property>
<property name="port:Factor4" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Any factor of interest  (e.g., 'date' or 'site' data)</configure></property>
<property name="port:Factor3" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Any factor of interest (e.g., 'date' or 'site' data)</configure></property>
<property name="port:Factor2" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Any factor of interest  (e.g., 'date' or 'site' data)</configure></property>
<property name="port:Factor1" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Any factor of interest (e.g., 'date' or 'site' data)</configure></property>
<property name="port:method" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The summary method. The default method is "presence." Use the Constant actor to input another summary method (e.g., mean, max, sum, etc.) </configure></property>
<property name="port:graphicsFileName" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>An output port that broadcasts the file name of the graph of the generated results. </configure></property>
<property name="port:output" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>An output port that broadcasts a copy of the text output that R generates. As the actor communicates with R to run the R function or script, the output port sends back the response (i.e., the values and statistical outputs).</configure></property>

<property name="prop:numXPixels" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The width of the output graphic in pixels.</configure></property>
<property name="prop:Rcwd" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The 'R' working directory (the home directory by default). </configure></property>
<property name="prop:expression" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The expression that is evaluated to produce the output.</configure></property>
<property name="prop:graphicsOutput" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Specify whether or not to create a graphics output port. By default, the actor will create a graphics output port.</configure></property>
<property name="prop:displayGraphicsOutput" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Select to display the plot once the actor has generated it.</configure></property>
<property name="prop:graphicsFormat" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The graphics output format. Currently the actor supports either  *.pdf or  *.png.</configure></property>
<property name="prop:numYPixels" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>The height of the output graphic in pixels.</configure></property>
<property name="prop:save_nosave" class="ptolemy.kernel.util.ConfigurableAttribute"><configure>Specify whether or not to save the R workspace when R is closed; set to '--save' to retrieve the workspace later in a workflow in another R-actor.</configure></property>



</property>
<property name="class" value="org.ecoinformatics.seek.R.RExpression" class="ptolemy.kernel.util.StringAttribute">
  <property name="id" value="null" class="ptolemy.kernel.util.StringAttribute"/>
</property>
<property name="kepler:graphicsFileName" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="output" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="string" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
</property>
<property name="kepler:output" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="output" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="string" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
</property>
<property name="kepler:Factor1" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
</property>
</property>
<property name="kepler:Factor2" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
</property>
</property>
<property name="kepler:Factor3" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
</property>
</property>
<property name="kepler:Factor4" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
</property>
</property>
<property name="kepler:Factor5" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
</property>
</property>
<property name="kepler:Variable" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
</property>
</property>
<property name="kepler:Method" class="org.kepler.moml.PortAttribute">
  <property name="direction" value="input" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
  <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
</property>
</property>
<property name="expression" class="ptolemy.kernel.util.StringAttribute" value="if (any(ls() == &quot;Method&quot;) == FALSE) {Method &lt;- &quot;presence&quot;}&#10;&#10;Factors &lt;- c(&quot;Factor1&quot;, &quot;Factor2&quot;, &quot;Factor3&quot;, &quot;Factor4&quot;, &quot;Factor5&quot;)&#10;Names   &lt;- c(&quot;fact1&quot;, &quot;fact2&quot;, &quot;fact3&quot;, &quot;fact4&quot;, &quot;fact5&quot;)&#10;FU      &lt;- c(&quot;f1&quot;, &quot;f2&quot;, &quot;f3&quot;, &quot;f4&quot;, &quot;f5&quot;)&#10;mark &lt;- 1&#10;facts &lt;- c()&#10;fs &lt;- c()&#10;row_vec &lt;- c()&#10;for (f in Factors) {&#10;	if (any(ls() == f) == TRUE) {&#10;		assign(Names[mark], get(f))&#10;		assign(FU[mark], unique(get(f)))&#10;		row_vec &lt;- c(row_vec, length(unique(get(f))))&#10;		facts &lt;- c(facts, Names[mark])&#10;		fs &lt;- c(fs, FU[mark])&#10;		mark &lt;- mark + 1&#10;	}&#10;}&#10;&#10;vec &lt;- c()&#10;for (i in 1:length(fs)) {&#10;	if (i == 1 &amp;&amp; length(fs) != 1) {&#10;		vec &lt;- c(vec, rep(get(fs[i]), each = prod(row_vec[(i+1):length(fs)])))&#10;	}&#10;	if (i != 1 &amp;&amp; i !=length(fs)) {&#10;		vec &lt;- c(vec, rep(get(fs[i]), times = prod(row_vec[1:i - 1]), each = prod(row_vec[(i+1):length(fs)])))&#10;	} &#10;	if (i == length(fs)) {&#10;		vec &lt;- c(vec, rep(get(fs[i]), times = prod(row_vec[1:i - 1])))&#10;	}&#10;}&#10;refmat &lt;- matrix(vec, prod(row_vec), length(fs))&#10;&#10;var &lt;- as.numeric(Variable)&#10;var[is.na(var) == TRUE] &lt;- 1&#10;&#10;presence &lt;- function(x) (if (sum(x, na.rm = TRUE) == 0) {0} else {1})&#10;&#10;mat &lt;- matrix(NA, prod(row_vec), length(var))&#10;counter &lt;- 0&#10;&#10;for (i in 1:dim(refmat)[1]) {&#10;	incr &lt;- 1&#10;	for (k in 1:length(var)) {	&#10;		for (j in 1:dim(refmat)[2]) {&#10;			if (refmat[i,j] == get(facts[j])[k]) {&#10;				counter &lt;- counter + 1&#10;			}&#10;		}&#10;		if (counter == dim(refmat)[2]) {&#10;			mat[i, incr] &lt;- var[k]&#10;			incr &lt;- incr + 1&#10;		}&#10;		counter &lt;- 0&#10;	}&#10;}&#10;&#10;&#10;if (Method != &quot;presence&quot;) {&#10;    hat &lt;- apply(mat, 1, Method, na.rm = TRUE)&#10;    hat[hat == &quot;NaN&quot;] &lt;- NA&#10;} else {&#10;    hat &lt;- apply(mat, 1, Method)&#10;}&#10;&#10;final &lt;- cbind(refmat, as.character(hat))&#10;&#10;&#10;&#10;&#10;write.table(final, file = &quot;summary.txt&quot;, row.names = FALSE, col.names = FALSE, quote = FALSE, sep = &quot;\t&quot;)&#10;system(&quot;open summary.txt&quot;)&#10;&#10;">
    <property name="R Expression" class="ptolemy.actor.gui.style.TextStyle">
        <property name="height" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="width" class="ptolemy.data.expr.Parameter" value="30">
        </property>
    </property>
</property>
<property name="save_nosave" class="ptolemy.data.expr.StringParameter" value="--no-save">
</property>
<property name="graphicsOutput" class="ptolemy.data.expr.Parameter" value="true">
</property>
<property name="numXPixels" class="ptolemy.data.expr.StringParameter" value="480">
</property>
<property name="numYPixels" class="ptolemy.data.expr.StringParameter" value="480">
</property>

<property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:1:1#MathOperationActor"/>
<property name="semanticType11" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#StatisticalOperation"/>
<property name="semanticType22" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:5:1#UnivariateAnalysis"/>
<property name="semanticType33" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#DataStructureOperation"/>

<property name="_location" class="ptolemy.kernel.util.Location" value="[130.0, 315.0]">
</property>

</entity>
