<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN" "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="Groovy" class="ptolemy.kernel.ComponentEntity">
    <property name="entityId" class="org.kepler.moml.NamedObjId" value="urn:lsid:kepler-project.org:actor:749:1">
    </property>
    <property name="class" class="ptolemy.kernel.util.StringAttribute" value="org.kepler.scriptengine.Groovy">
        <property name="id" class="ptolemy.kernel.util.StringAttribute" value="null">
        </property>
    </property>
    <property name="semanticType00" class="org.kepler.sms.SemanticType" value="urn:lsid:localhost:onto:2:1#ScriptingLanguage">
    </property>
    <property name="language" class="ptolemy.data.expr.StringParameter" value="groovy">
    </property>
    <property name="script" class="ptolemy.kernel.util.StringAttribute" value="&#10;import ptolemy.data.IntToken&#10;&#10;// Groovy actor to compute factorials.&#10;&#10;public class Actor {&#10;    def fire() {&#10;        int val = input.get(0).intValue()&#10;        if(val &lt; 0) {&#10;            actor.error(&quot;Input must be non-negative.&quot;);&#10;            return&#10;        }&#10;        int total = factorial(val)&#10;        output.broadcast(new IntToken(total))&#10;    }&#10;&#10;    def factorial = { n -&gt; n == 0 ? 1 : n * factorial(n - 1) }&#10;}&#10;&#10;">
    </property>
    <property name="input" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="input"/>
        <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
        <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
    </property>
    <property name="output" class="org.kepler.moml.PortAttribute">
        <property name="direction" class="ptolemy.kernel.util.StringAttribute" value="output"/>
        <property name="dataType" value="unknown" class="ptolemy.kernel.util.StringAttribute"/>
        <property name="isMultiport" value="false" class="ptolemy.kernel.util.StringAttribute"/>
    </property>
    <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorConfigureFactory">
        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
        </property>
    </property>
<property name="KeplerDocumentation" class="ptolemy.vergil.basic.KeplerDocumentationAttribute">
<property name="description" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>null</configure>
    </property>
<property name="author" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>Daniel Crawl</configure>
    </property>
<property name="version" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>$Id$</configure>
    </property>
<property name="userLevelDocumentation" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>
An actor whose execution is defined by a Groovy script.
  The script can be edited by double-clicking on the actor.   
  
  &lt;p&gt;The following example defines an actor in Groovy that
  computes factorials:&lt;/p&gt;
&lt;pre&gt;
1. import ptolemy.data.IntToken
2. 
3. // Groovy actor to compute factorials.
4. 
5. public class Actor {
6.     def fire() {
7.         int val = input.get(0).intValue()
8.         if(val &lt; 0) {
9.             actor.error("Input must be non-negative.");
10.            return
11.        }
12.        int total = factorial(val)
13.        output.broadcast(new IntToken(total))
14.    }
15.
16.    def factorial = { n -&gt; n == 0 ? 1 : n * factorial(n - 1) }
17.}
&lt;/pre&gt;

  &lt;p&gt;Line 1 imports the Java class used by the actor. Lines 5-17 define
  the Actor object; the actor object must be named "Actor" in Groovy scripts.
  Lines 6-14 define the fire() method of the actor, which is called each
  time this actor executes in the workflow. Line 7 reads an integer from the
  input port called "input". A port or parameter called "foo" can be accessed
  in the Groovy script by using the same name. Line 12 calls the closure
  defined on line 16 that recursively computes the factorial of the integer
  read from the port. Line 13 writes the result to the output port called
  "output".&lt;/p&gt;</configure>
    </property>
<property name="prop:script" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The contents of the script.</configure>
    </property>
<property name="prop:actorClassName" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The name of the class in the script defining the execution methods.</configure>
    </property>
<property name="prop:language" class="ptolemy.kernel.util.ConfigurableAttribute">
      <configure>The script language.</configure>
    </property>
</property>
</entity>
